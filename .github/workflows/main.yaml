name: "Main"
on:
    push:
        branches:
            - dummy-feat
    pull_request:
        branches:
            - master

jobs:
    dep-install:
        name: "Run dependency install"
        timeout-minutes: 30
        runs-on: ubuntu-latest
        container:
          image: golang:1.21.7-bullseye
        steps:
            # - name: Install node
            #   uses: actions/setup-node@v2
            #   with:
            #       node-version: "20.0.0"

            # - name: Install yarn
            #   run: npm install -g yarn

            - name: Checkout repo
              uses: actions/checkout@main
              with:
                  submodules: "true"

            - name: Install other dependencies
              run: |
                  rm /bin/sh && ln -s /bin/bash /bin/sh
                  cat /etc/os-release
                  apt-get update
                  apt-get -y install hwloc jq pkg-config bzr ocl-icd-opencl-dev
                  apt install zsh -y
                  make install_solc_linux
                  # yarn install
                  ls -1 /usr/lib/*/libhwloc.so.* | head -n 1 | xargs -n1 -I {} ln -s {} /usr/lib/libhwloc.so

            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: nightly
                  override: true

            - name: Compilation
              run: |
                cd testing
                rustup target add wasm32-unknown-unknown
                cargo build
                cargo test account

            - name: Test Account
              run: |
                  cargo test account
            # - name: Restore crates
            #   uses: actions/cache@v3
            #   with:
            #       path: |
            #           ~/.cargo/bin/
            #           ~/.cargo/registry/index/
            #           ~/.cargo/registry/cache/
            #           ~/.cargo/git/db/
            #       key: ${{ runner.os }}-cargo-${{ hashFiles('./testing/Cargo.lock') }}

    # smoke-tests:
    #     name: "Run smoke tests"
    #     timeout-minutes: 30
    #     runs-on: ubuntu-24.04 
    #     needs: [dep-install]
    #     steps:
    #         - name: Checkout
    #           uses: actions/checkout@v2
    #           with:
    #               submodules: "true"

    #         - name: Compile contracts
    #           run: ./testing/smoke_tests.sh

    # miner-integration:
    #     name: "Miner API: integration tests"
    #     timeout-minutes: 30
    #     runs-on: ubuntu-latest
    #     needs: [dep-install]
    #     steps:
    #         - name: Checkout
    #           uses: actions/checkout@v2
    #           with:
    #               submodules: "true"

    #         - name: Run miner test
    #           run: |
    #               cd testing
    #               rustup target add wasm32-unknown-unknown
    #               cargo test miner_test

    # compilation:
    #     name: "Build API: integration tests"
    #     timeout-minutes: 30
    #     runs-on: ubuntu-latest
    #     container:
    #       image: golang:1.21.7-bullseye
    #     needs: [dep-install]
    #     steps:
    #         - name: Checkout
    #           uses: actions/checkout@v2
    #           with:
    #               submodules: "true"

    #         - name: Build
    #           run: |
    #               cd testing
    #               rustup target add wasm32-unknown-unknown
    #               cargo build